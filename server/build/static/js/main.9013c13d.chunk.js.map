{"version":3,"sources":["components/TodoItem.js","services/todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","item","toggleCompletion","deleteCompletion","index","status","showAll","completed","buttonStyle","float","margin","draggableId","id","provided","ref","innerRef","draggableProps","dragHandleProps","ListGroup","Item","style","textDecoration","Row","className","Col","display","verticalAlign","text","Button","onClick","variant","baseUrl","getAll","a","axios","get","response","data","create","newObject","post","remove","delete","update","put","App","useState","todoItems","setTodoItems","newTodoItem","setNewTodoItem","useEffect","todoService","then","initialTodoItems","sort","b","position","marginTop","textAlign","onDragEnd","result","destination","items","Array","from","splice","source","reorderedItem","reorderedItems","map","filter","forEach","droppableId","droppableProps","todoItem","find","changedItem","returnedTodo","toggleTodoCompletion","placeholder","Form","onSubmit","event","preventDefault","newTodo","nanoid","length","concat","Control","value","onChange","target","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9013c13d.chunk.js","sourcesContent":["import React from 'react'\nimport { ListGroup, Button, Row, Col } from 'react-bootstrap'\nimport { Draggable } from 'react-beautiful-dnd'\n\nconst TodoItem = ({ item, toggleCompletion, deleteCompletion, index, showAll }) => {\n  const status = item.completed ? \"unfinish\" : \"finish\"\n\n  const buttonStyle = { float: \"right\", margin: \"0 0.5em\" }\n\n  return (\n    <Draggable key={item.id} draggableId={item.id} index={index}>\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n            <ListGroup.Item style={item.completed ? {textDecoration:\"line-through\"} : null}>\n              <Row className={\"align-items-center\"}>\n                <Col style={{display: \"table-cell\", verticalAlign: \"middle\"}}>\n                  <p style={{margin: \"0\"}}>{item.text}</p>\n                </Col>\n                <Col>\n                  <Button onClick={deleteCompletion} variant=\"danger\" style={buttonStyle}>delete</Button>\n                  <Button onClick={toggleCompletion} variant=\"outline-dark\" style={buttonStyle}>{status}</Button>\n                </Col>\n              </Row>\n            </ListGroup.Item >\n        </div>\n      )}\n\n    </Draggable>\n  )\n}\n\nexport default TodoItem\n","import axios from 'axios'\nconst baseUrl = '/todo'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newObject) => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const response = await axios.delete(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\n\nexport default { getAll, create, update, remove }\n","import React, { useState, useEffect } from 'react';\nimport TodoItem from './components/TodoItem'\nimport todoService from './services/todo'\nimport { ListGroup, Form, Button } from 'react-bootstrap'\nimport { nanoid } from 'nanoid'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nconst App = () => {\n  const [todoItems, setTodoItems] = useState([])\n  const [newTodoItem, setNewTodoItem] = useState('')\n\n  useEffect(() => {\n    todoService\n      .getAll()\n      .then(initialTodoItems => {\n        setTodoItems(initialTodoItems.sort((a, b) => a.position - b.position))\n      })\n  }, [])\n\n  const addTodoItem = (event) => {\n    event.preventDefault()\n    const newTodo = {\n      id: nanoid(),\n      text: newTodoItem,\n      completed: false,\n      position: todoItems.length,\n    }\n\n    todoService\n      .create(newTodo)\n      .then(returnedTodo => {\n        setTodoItems(todoItems.concat(returnedTodo))\n        setNewTodoItem('')\n      })\n\n  }\n\n  const deleteTodoItem = id => {\n    todoService\n      .remove(id)\n      .then(() => {\n        setTodoItems(todoItems.filter(item => item.id !== id))\n      })\n  }\n\n  const handleNewTodoItemChange = (event) => {\n    setNewTodoItem(event.target.value)\n  }\n\n  const toggleTodoCompletion = id => {\n    const todoItem = todoItems.find(item => item.id === id)\n    const changedItem = { ...todoItem, completed: !todoItem.completed }\n\n    todoService\n      .update(id, changedItem)\n      .then(returnedTodo => {\n        setTodoItems(todoItems.map(item => item.id !== id ? item : returnedTodo))\n      })\n  }\n\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const items = Array.from(todoItems);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    const reorderedItems = items.map((item, index) => {\n      return {...item, position:index}\n    })\n\n    reorderedItems\n      .filter((item, index) => item.id !== todoItems[index].id)\n      .forEach((item, index) => todoService.update(item.id, item))\n\n    setTodoItems(reorderedItems);\n  }\n\n  return (\n    <div className=\"container\" style={{ marginTop: \"5vh\" }}>\n      <div style={{ textAlign: \"center\" }}>\n        <h1>Shit I Need Todo</h1>\n      </div >\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId=\"todo\">\n          {(provided) => (\n            <ListGroup {...provided.droppableProps} ref={provided.innerRef}>\n              {todoItems.map((item, index) => {\n                return (\n                  <TodoItem\n                    key={item.id}\n                    item={item}\n                    index={index}\n                    toggleCompletion={() => toggleTodoCompletion(item.id)}\n                    deleteCompletion={() => deleteTodoItem(item.id)} />\n                )\n              }\n              )}\n              {provided.placeholder}\n            </ListGroup>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Form onSubmit={addTodoItem} style={{ marginTop: \"1em\" }}>\n        <Form.Control value={newTodoItem} onChange={handleNewTodoItemChange} />\n        <Button type=\"submit\" style={{ marginTop: \"0.5%\" }}>Save</Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}